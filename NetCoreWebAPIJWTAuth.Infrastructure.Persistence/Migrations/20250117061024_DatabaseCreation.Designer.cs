// <auto-generated />
using System;
using NetCoreWebAPIJWTAuth.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NetCoreWebAPIJWTAuth.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20250117061024_DatabaseCreation")]
    partial class DatabaseCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NetCoreWebAPIJWTAuth.Core.Domain.Entities.BaseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("BaseEntityId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("BaseEntities");
                });

            modelBuilder.Entity("NetCoreWebAPIJWTAuth.Core.Domain.Entities.DependantEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("DependantEntityId");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<Guid>("BaseEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("BaseEntityId");

                    b.ToTable("DependantEntities");
                });

            modelBuilder.Entity("NetCoreWebAPIJWTAuth.Core.Domain.Entities.DependantEntity", b =>
                {
                    b.HasOne("NetCoreWebAPIJWTAuth.Core.Domain.Entities.BaseEntity", "BaseEntity")
                        .WithMany("DependantEntities")
                        .HasForeignKey("BaseEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseEntity");
                });

            modelBuilder.Entity("NetCoreWebAPIJWTAuth.Core.Domain.Entities.BaseEntity", b =>
                {
                    b.Navigation("DependantEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
